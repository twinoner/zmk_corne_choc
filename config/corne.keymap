/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
	conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB  |  '  |  ,  |  .  |  P  |  Y  |    |  F  |  G   |  C   |  R  |  L  |   /   |
// | LCTRL |  A  |  O  |  E  |  U  |  I  |    |  D  |  H   |  T   |  N  |  S  |   -   |
// | SHIFT |  ;  |  Q  |  J  |  K  |  X  |    |  B  |  M   |  W   |  V  |  Z  | SHIFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | BKSP |
			label = "Base";
			bindings = <
&kp TAB   &kp SQT   &kp COMMA  &kp DOT  &kp P           &kp Y  &kp F  &kp G     &kp C  &kp R  &kp L  &kp FSLH
&kp LCTRL &kp A     &kp O      &kp E    &kp U           &kp I  &kp D  &kp H     &kp T  &kp N  &kp S  &kp MINUS
&kp LSHFT &kp SEMI  &kp Q      &kp J    &kp K           &kp X  &kp B  &kp M &kp W  &kp V  &kp Z  &kp RSHFT
				&kp LGUI &mo LOWER &kp SPACE        &kp RET &mo RAISE &kp BKSP
			>;
		};

		lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |  0  | BKSP |
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |       |  F7 |  F8 |  F9 | F10 | F11 | F12  |
// |      |     |     |     |     |     |       |     |     |     |     |     |      |
//                    | GUI |     | SPC |       | ENT |     | ALT |
			label = "Lower";
			bindings = <
&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5              &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6               &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
&trans &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans &trans
					&kp LGUI &trans &kp SPACE      &kp RET &trans &kp RALT
			>;
		};

		raise_layer {
// -----------------------------------------------------------------------------------------
// |CAPS |   1  |  2   |  3  |  4  |  5    |          |  6  |   7  |   8  |  9    |   0   |       |
// |BTCLR| BT1  | BT2  | BT3 | BT4 | BT5   |          |     |   <- |   ^  |  v    |  ->   |       |
// |     |      |      |HOME | END |SUBMENU|          |  +  |   -  |   =  |  [    |   ]   |   \   |
//                     | GUI |     |  SPC  |          | ENT |     | ALT |
			label = "Raise";
			bindings = <
&kp CAPS &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N4 &kp KP_N5		&kp KP_N6 &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0 &trans
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 4 &bt BT_SEL 5			&trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
&trans &trans &trans &kp HOME &kp END &kp K_CMENU			&kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH
					&kp LGUI &trans &kp SPACE			&kp RET &trans &kp RALT
			>;
		};

		media_layer {
// -----------------------------------------------------------------------------------------
// |EP_TOG|		|       |       |       |       |          |     | mute | vol v| vol ^ |       |       |
// |BL_TOG|		|RGB_TOG|RGB_EFF|RGB_HUI|RGB_SAI|          |     |      |      |       |       |       |
// | BL 10|BL 25| BL 50 | BL 75 | BL 100|		|          |     |      |      |       |       |       |
//                      |     |     |       |          |     |      |      |
			label = "Media";
			bindings = <
&ext_power EP_TOG &trans &trans &trans &trans &trans			&trans &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans &trans
&bl BL_TOG &bl BL_DEC &bl BL_INC &bl BL_CYCLE &trans &trans			&trans &trans &trans &trans &trans &trans
&bl BL_SET 10 &bl BL_SET 25 &bl BL_SET 50 &bl BL_SET 75 &bl BL_SET 100 &trans			&trans &trans &trans &trans &trans &trans
					&trans &trans &trans   		&trans &trans &trans
			>;
		};
	};
};
