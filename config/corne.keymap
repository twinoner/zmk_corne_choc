/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/backlight.h>

#include <../boards/shields/corne/boards/nice_nano.overlay>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
	conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB  |  '  |  ,  |  .  |  P  |  Y  |    |  F  |  G   |  C   |  R  |  L  |   /   |
// | LCTRL |  A  |  O  |  E  |  U  |  I  |    |  D  |  H   |  T   |  N  |  S  |   -   |
// | SHIFT |  ;  |  Q  |  J  |  K  |  X  |    |  B  |  M   |  W   |  V  |  Z  | SHIFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | BKSP |
			label = "Base";
			bindings = <
&kp TAB   &kp SQT   &kp COMMA  &kp DOT  &kp P  &kp Y 		 &kp F  &kp G     &kp C  &kp R  &kp L  &kp FSLH
&kp LCTRL &kp A     &kp O      &kp E    &kp U  &kp I 		 &kp D  &kp H     &kp T  &kp N  &kp S  &kp MINUS
&kp LSHFT &kp SEMI  &kp Q      &kp J    &kp K  &kp X 		 &kp B  &kp M &kp W  &kp V  &kp Z  &kp RSHFT
				&kp LGUI &mo LOWER &kp SPACE        &kp RET &mo RAISE &kp BKSP
			>;
		};

		lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |  0  | BKSP |
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |       |  F7 |  F8 |  F9 | F10 | F11 | F12  |
// |      |     |     |     |     |     |       |     |     |     |     |     |  "|" |
//                    | GUI |     | PG_UP |       | PG_UP |     | DEL |
			label = "Lower";
			bindings = <
&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5              &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6               &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
&trans &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans &kp PIPE
					&kp LGUI &trans &kp PG_UP      &kp PG_UP &trans &kp DEL
			>;
		};

		raise_layer {
// -----------------------------------------------------------------------------------------
// |CAPS |      |      |     |     |       |          |     |      |      |       |       |       |
// |     |      |      |     |     |       |          |     |   <- |   ^  |  v    |  ->   |R CTRL|
// |     |      |      |HOME | END |SUBMENU|          |  +  |   -  |   =  |   *   |       |   \   |
//                     | LALT |     |   [   |       |  ]  |     | RALT |
			label = "Raise";
			bindings = <
&kp CAPS &trans &trans &trans &trans &trans				&trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans			&trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp RCTRL
&trans &trans &trans &kp HOME &kp END &kp K_CMENU			&kp KP_PLUS &kp MINUS &kp EQUAL &kp KP_MULTIPLY &trans &kp BSLH
					&kp LALT &trans &kp LBKT		&kp RBKT &trans &kp RALT
			>;
		};

		media_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  | BT3 | BT4 | BT5   |           |     |       | vol v| vol ^ |       |       |
// |	  |PREV |PLAYPAU|NEXT |       |     |          |     |       |      |       |       |       |unoeathu
// |      |     |       |     |       |		|          |     |       |      |       |       |       |
//                      |mute |     | VOL V |          | VOL ^|      |      |
			label = "Media";
			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4			&rgb_ug RGB_BRD    &rgb_ug RGB_BRI &trans &rgb_ug RGB_EFR    &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
&out OUT_TOG &kp C_PREV &kp C_PP &kp C_NEXT &trans &trans			&rgb_ug RGB_SAD    &rgb_ug RGB_SAI &trans &bl BL_DEC &bl BL_INC &bl BL_CYCLE
&ext_power EP_OFF &ext_power EP_ON &trans &trans &trans &trans			&rgb_ug RGB_HUD    &rgb_ug RGB_HUI &trans &bl BL_ON &bl BL_OFF &bl BL_TOG
					&kp K_MUTE &trans &kp C_VOL_DN   		&kp C_VOL_UP &trans &trans
			>;
		};
	};
};
